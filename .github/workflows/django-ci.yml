name: Django CI/CD (simulado)

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: proyecto_cicd.settings
      DJANGO_SECRET_KEY: dummy-ci
      DJANGO_DEBUG: "true"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Django check
        run: python manage.py check

      - name: Migrate (sqlite)
        run: python manage.py migrate --noinput

      - name: Tests
        run: python manage.py test --verbosity 2

      - name: Empaquetar artefacto desde HEAD (git archive)
        run: |
          git archive --format=tar.gz -o build.tar.gz HEAD

      - name: Subir artefacto CI
        uses: actions/upload-artifact@v4
        with:
          name: django-build
          path: build.tar.gz

  cd:
    name: CD simulado (no despliega, prepara release)
    needs: ci
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && success() }}

    steps:
      - name: Descargar artefacto del CI
        uses: actions/download-artifact@v4
        with:
          name: django-build
          path: .

      - name: Desempaquetar a carpeta deploy/
        run: |
          mkdir -p deploy
          tar -xzf build.tar.gz -C deploy

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip (CD simulado)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cd-${{ hashFiles('deploy/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-cd-

      - name: Instalar deps dentro de deploy/
        working-directory: deploy
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Smoke-check sencillo para validar que es desplegable (sin levantar servidor)
      - name: Smoke check (manage.py check --deploy)
        working-directory: deploy
        env:
          DJANGO_SETTINGS_MODULE: proyecto_cicd.settings
          DJANGO_SECRET_KEY: dummy-cd
          DJANGO_DEBUG: "false"
        run: |
          python manage.py check --deploy

      # Opcional: empaquetar como "release" listo para copiar a un servidor real
      - name: Empaquetar release simulado
        run: |
          tar -czf django-release-simulado.tar.gz -C deploy .

      - name: Subir artefacto de release (simulado)
        uses: actions/upload-artifact@v4
        with:
          name: django-release-simulado
          path: django-release-simulado.tar.gz
